SET autocommit = OFF;
SET SQL_SAFE_UPDATES = 0;
SET @HIVE_SCHEMA_TO_DELETE := '${HIVE_SCHEMA_TO_DELETE}';

START TRANSACTION;

--
-- Save off CD_IDs so we can delete rows from CDS later
--
DROP TABLE IF EXISTS APIARY_TMP_CDS_IDS;
CREATE TEMPORARY TABLE APIARY_TMP_CDS_IDS(CD_ID bigint(20) PRIMARY KEY);

INSERT INTO APIARY_TMP_CDS_IDS(CD_ID)
    SELECT DISTINCT COLUMNS_V2.CD_ID FROM COLUMNS_V2
        INNER JOIN CDS on COLUMNS_V2.CD_ID = CDS.CD_ID
        INNER JOIN SDS on SDS.CD_ID = CDS.CD_ID
        INNER JOIN TBLS on TBLS.SD_ID = SDS.SD_ID
        INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
        WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

INSERT IGNORE INTO APIARY_TMP_CDS_IDS(CD_ID)
    SELECT DISTINCT CDS.CD_ID FROM CDS
        INNER JOIN SDS on SDS.CD_ID = CDS.CD_ID
        INNER JOIN TBLS on TBLS.SD_ID = SDS.SD_ID
        INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
        WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- COLUMNS_V2
--
DELETE COLUMNS_V2 FROM COLUMNS_V2
    INNER JOIN CDS on COLUMNS_V2.CD_ID = CDS.CD_ID
    INNER JOIN SDS on SDS.CD_ID = CDS.CD_ID
    INNER JOIN TBLS on TBLS.SD_ID = SDS.SD_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE COLUMNS_V2 FROM COLUMNS_V2
    INNER JOIN CDS on COLUMNS_V2.CD_ID = CDS.CD_ID
    INNER JOIN SDS on SDS.CD_ID = CDS.CD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- DATABASE_PARAMS
--
DELETE DATABASE_PARAMS FROM DATABASE_PARAMS
    INNER JOIN DBS ON DBS.DB_ID = DATABASE_PARAMS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- DB_PRIVS
--
DELETE DB_PRIVS FROM DB_PRIVS
    INNER JOIN DBS ON DBS.DB_ID = DB_PRIVS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- INDEX_PARAMS
--
DELETE INDEX_PARAMS FROM INDEX_PARAMS
    INNER JOIN IDXS ON IDXS.INDEX_ID = INDEX_PARAMS.INDEX_ID
    INNER JOIN TBLS ON TBLS.TBL_ID = IDXS.INDEX_TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE INDEX_PARAMS FROM INDEX_PARAMS
    INNER JOIN IDXS ON IDXS.INDEX_ID = INDEX_PARAMS.INDEX_ID
    INNER JOIN TBLS ON TBLS.TBL_ID = IDXS.ORIG_TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE INDEX_PARAMS FROM INDEX_PARAMS
    INNER JOIN IDXS ON IDXS.INDEX_ID = INDEX_PARAMS.INDEX_ID
    INNER JOIN SDS on SDS.SD_ID = IDXS.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- IDXS
--
DELETE IDXS FROM IDXS
    INNER JOIN TBLS ON TBLS.TBL_ID = IDXS.INDEX_TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE IDXS FROM IDXS
    INNER JOIN TBLS ON TBLS.TBL_ID = IDXS.ORIG_TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE IDXS FROM IDXS
    INNER JOIN SDS on SDS.SD_ID = IDXS.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PARTITION_EVENTS
--
DELETE PARTITION_EVENTS FROM PARTITION_EVENTS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_NAME = PARTITION_EVENTS.PARTITION_NAME
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PARTITION_EVENTS FROM PARTITION_EVENTS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_NAME = PARTITION_EVENTS.PARTITION_NAME
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PARTITION_KEY_VALS
--
DELETE PARTITION_KEY_VALS FROM PARTITION_KEY_VALS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PARTITION_KEY_VALS.PART_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PARTITION_KEY_VALS FROM PARTITION_KEY_VALS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PARTITION_KEY_VALS.PART_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PARTITION_PARAMS
--
DELETE PARTITION_PARAMS FROM PARTITION_PARAMS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PARTITION_PARAMS.PART_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PARTITION_PARAMS FROM PARTITION_PARAMS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PARTITION_PARAMS.PART_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PART_COL_PRIVS
--
DELETE PART_COL_PRIVS FROM PART_COL_PRIVS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_COL_PRIVS.PART_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PART_COL_PRIVS FROM PART_COL_PRIVS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_COL_PRIVS.PART_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PART_PRIVS
--
DELETE PART_PRIVS FROM PART_PRIVS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_PRIVS.PART_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PART_PRIVS FROM PART_PRIVS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_PRIVS.PART_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PART_COL_STATS
--
DELETE PART_COL_STATS FROM PART_COL_STATS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_COL_STATS.PART_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.SD_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

DELETE PART_COL_STATS FROM PART_COL_STATS
    INNER JOIN PARTITIONS ON PARTITIONS.PART_ID = PART_COL_STATS.PART_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS ON DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- Need to save off STRING_LIST_ID's here
--
DROP TABLE IF EXISTS APIARY_TMP_SKEWED_STRING_LIST_IDS;
CREATE TEMPORARY TABLE APIARY_TMP_SKEWED_STRING_LIST_IDS(STRING_LIST_ID bigint(20) PRIMARY KEY);

INSERT INTO APIARY_TMP_SKEWED_STRING_LIST_IDS(STRING_LIST_ID)
    SELECT SKEWED_STRING_LIST.STRING_LIST_ID FROM SKEWED_STRING_LIST
    INNER JOIN SKEWED_COL_VALUE_LOC_MAP on SKEWED_COL_VALUE_LOC_MAP.STRING_LIST_ID_KID = SKEWED_STRING_LIST.STRING_LIST_ID
    INNER JOIN SDS on SDS.SD_ID = SKEWED_COL_VALUE_LOC_MAP.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SKEWED_STRING_LIST_VALUES
--
DELETE SKEWED_STRING_LIST_VALUES FROM SKEWED_STRING_LIST_VALUES
    INNER JOIN SKEWED_STRING_LIST on SKEWED_STRING_LIST.STRING_LIST_ID = SKEWED_STRING_LIST_VALUES.STRING_LIST_ID
    INNER JOIN SKEWED_COL_VALUE_LOC_MAP on SKEWED_COL_VALUE_LOC_MAP.STRING_LIST_ID_KID = SKEWED_STRING_LIST.STRING_LIST_ID
    INNER JOIN SDS on SDS.SD_ID = SKEWED_COL_VALUE_LOC_MAP.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SKEWED_VALUES
--
DELETE SKEWED_VALUES FROM SKEWED_VALUES
    INNER JOIN SKEWED_STRING_LIST on SKEWED_STRING_LIST.STRING_LIST_ID = SKEWED_VALUES.STRING_LIST_ID_EID
    INNER JOIN SDS on SDS.SD_ID = SKEWED_VALUES.SD_ID_OID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SKEWED_COL_VALUE_LOC_MAP
--
DELETE SKEWED_COL_VALUE_LOC_MAP FROM SKEWED_COL_VALUE_LOC_MAP
    INNER JOIN SKEWED_STRING_LIST on SKEWED_STRING_LIST.STRING_LIST_ID = SKEWED_COL_VALUE_LOC_MAP.STRING_LIST_ID_KID
    INNER JOIN SDS on SDS.SD_ID = SKEWED_COL_VALUE_LOC_MAP.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SKEWED_COL_NAMES
--
DELETE SKEWED_COL_NAMES FROM SKEWED_COL_NAMES
    INNER JOIN SDS on SDS.SD_ID = SKEWED_COL_NAMES.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- Need to delete SKEWED_STRING_LIST here
--
DELETE SKEWED_STRING_LIST FROM SKEWED_STRING_LIST
    INNER JOIN APIARY_TMP_SKEWED_STRING_LIST_IDS
        ON APIARY_TMP_SKEWED_STRING_LIST_IDS.STRING_LIST_ID = SKEWED_STRING_LIST.STRING_LIST_ID;

DROP TABLE IF EXISTS APIARY_TMP_SKEWED_STRING_LIST_IDS;

--
-- SORT_COLS
--
DELETE SORT_COLS FROM SORT_COLS
    INNER JOIN SDS on SDS.SD_ID = SORT_COLS.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- BUCKETING_COLS
--
DELETE BUCKETING_COLS FROM BUCKETING_COLS
    INNER JOIN SDS on SDS.SD_ID = BUCKETING_COLS.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SD_PARAMS
--
DELETE SD_PARAMS FROM SD_PARAMS
    INNER JOIN SDS on SDS.SD_ID = SD_PARAMS.SD_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.SD_ID = PARTITIONS.PART_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- FUNC_RU
--
DELETE FUNC_RU FROM FUNC_RU
    INNER JOIN FUNCS on FUNCS.FUNC_ID = FUNC_RU.FUNC_ID
    INNER JOIN DBS on FUNCS.DB_ID = DBS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- FUNCS
--
DELETE FUNCS FROM FUNCS
    INNER JOIN DBS on FUNCS.DB_ID = DBS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PARTITION_KEYS
--
DELETE PARTITION_KEYS FROM PARTITION_KEYS
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITION_KEYS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- TBL_PRIVS
--
DELETE TBL_PRIVS FROM TBL_PRIVS
    INNER JOIN TBLS on TBLS.TBL_ID = TBL_PRIVS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- TABLE_PARAMS
--
DELETE TABLE_PARAMS FROM TABLE_PARAMS
    INNER JOIN TBLS on TBLS.TBL_ID = TABLE_PARAMS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- TBL_COL_PRIVS
--
DELETE TBL_COL_PRIVS FROM TBL_COL_PRIVS
    INNER JOIN TBLS on TBLS.TBL_ID = TBL_COL_PRIVS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- TAB_COL_STATS
--
DELETE TAB_COL_STATS FROM TAB_COL_STATS
    INNER JOIN TBLS on TBLS.TBL_ID = TAB_COL_STATS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- Need to save off SERDE_ID's here
--
DROP TABLE IF EXISTS APIARY_TMP_SERDES_IDS;
CREATE TEMPORARY TABLE APIARY_TMP_SERDES_IDS(SERDE_ID bigint(20) PRIMARY KEY);

INSERT INTO APIARY_TMP_SERDES_IDS(SERDE_ID)
    SELECT SERDES.SERDE_ID FROM SERDES
        INNER JOIN SDS on SDS.SERDE_ID = SERDES.SERDE_ID
        INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
        INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
        INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
        WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- SERDE_PARAMS
--
DELETE SERDE_PARAMS FROM SERDE_PARAMS
    INNER JOIN SDS on SDS.SERDE_ID = SERDE_PARAMS.SERDE_ID
    INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;


--
-- Have to delete PARTITIONS before SDS but SDS has no way back to the table or DB except through
-- partition. Save off SD_ID's for PARTITIONS here.
--
DROP TABLE IF EXISTS APIARY_TMP_SDS_FOR_PARTITIONS_IDS;
CREATE TEMPORARY TABLE APIARY_TMP_SDS_FOR_PARTITIONS_IDS(SD_ID bigint(20) PRIMARY KEY);

INSERT INTO APIARY_TMP_SDS_FOR_PARTITIONS_IDS(SD_ID)
    SELECT SDS.SD_ID FROM SDS
        INNER JOIN PARTITIONS on PARTITIONS.SD_ID = SDS.SD_ID
        INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
        INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
        WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- PARTITIONS
--
DELETE PARTITIONS FROM PARTITIONS
    INNER JOIN TBLS on TBLS.TBL_ID = PARTITIONS.TBL_ID
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- Save off SDS.SD_ID's (for TBLS)
--
DROP TABLE IF EXISTS APIARY_TMP_SDS_FOR_TBLS_IDS;
CREATE TEMPORARY TABLE APIARY_TMP_SDS_FOR_TBLS_IDS(SD_ID bigint(20) PRIMARY KEY);

INSERT INTO APIARY_TMP_SDS_FOR_TBLS_IDS(SD_ID)
    SELECT SDS.SD_ID FROM SDS
        INNER JOIN TBLS on TBLS.SD_ID = SDS.SD_ID
        INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
        WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

--
-- TBLS
--
DELETE TBLS FROM TBLS
    INNER JOIN DBS on DBS.DB_ID = TBLS.DB_ID
    WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;


--
-- Delete SDS for PARTITIONS and TBLS
--
DELETE SDS FROM SDS
    INNER JOIN APIARY_TMP_SDS_FOR_PARTITIONS_IDS on APIARY_TMP_SDS_FOR_PARTITIONS_IDS.SD_ID = SDS.SD_ID;

DROP TABLE IF EXISTS APIARY_TMP_SDS_FOR_PARTITIONS_IDS;

DELETE SDS FROM SDS
    INNER JOIN APIARY_TMP_SDS_FOR_TBLS_IDS on APIARY_TMP_SDS_FOR_TBLS_IDS.SD_ID = SDS.SD_ID;

DROP TABLE IF EXISTS APIARY_TMP_SDS_FOR_TBLS_IDS;

--
-- Need to delete SERDES here
--
DELETE SERDES FROM SERDES
    INNER JOIN APIARY_TMP_SERDES_IDS ON APIARY_TMP_SERDES_IDS.SERDE_ID = SERDES.SERDE_ID;

DROP TABLE IF EXISTS APIARY_TMP_SERDES_IDS;

--
-- Need to delete CDS here
--
DELETE CDS FROM CDS
    INNER JOIN APIARY_TMP_CDS_IDS on APIARY_TMP_CDS_IDS.CD_ID = CDS.CD_ID;

DROP TABLE IF EXISTS APIARY_TMP_CDS_IDS;

--
-- DBS
--
DELETE FROM DBS WHERE DBS.name = @HIVE_SCHEMA_TO_DELETE;

COMMIT;
